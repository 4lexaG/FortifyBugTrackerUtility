<?xml version="1.0" encoding="UTF-8"?>
<!--
  (c) Copyright 2017 EntIT Software LLC, a Micro Focus company
  
  Permission is hereby granted, free of charge, to any person obtaining a 
  copy of this software and associated documentation files (the 
  "Software"), to deal in the Software without restriction, including without 
  limitation the rights to use, copy, modify, merge, publish, distribute, 
  sublicense, and/or sell copies of the Software, and to permit persons to 
  whom the Software is furnished to do so, subject to the following 
  conditions:
  
  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  IN THE SOFTWARE.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!-- Auto-configure various components -->
	<context:component-scan base-package="com.fortify.processrunner.fod"/>
	
	<!-- FoD configuration properties -->
	<bean id="fodConfiguration" class="com.fortify.processrunner.fod.processor.composite.FoDBugTrackerProcessorConfiguration">	
		<!-- Set the FoD filter string to get the list of vulnerabilities to be submitted to
		     the external system. Information about the format of this filter string can be
		     found in the FoD API documentation, and you can use the FoD API Explorer to test
		     your filter strings. -->
		<property name="filterStringForVulnerabilitiesToBeSubmitted"><value>
			severityString:Critical|High+isSuppressed=false
		</value></property>
		
		<!-- Set additional filters for vulnerabilities to be submitted to the external
		     system, if you require any filtering that cannot be performed by FoD directly. -->
		<property name="regExFiltersForVulnerabilitiesToBeSubmitted"><map>
			<!-- <entry key="someField.someSubField" value="Regular Expression"/> -->
		</map></property>
		
		<!-- Specify whether, and how information about the submitted vulnerabilities
		     should be added to FoD. If all of these are disabled, no information
		     about the submitted vulnerability will be stored in FoD, resulting in
		     all vulnerabilities being submitted again on a next invocation, and
		     disabling bug state management. You should enable at most one of these
		     options. Bug data can either be stored as a vulnerability comment, or
		     as a native FoD bug link. -->
		<property name="addBugDataAsComment" value="false"/>
		<property name="addNativeBugLink" value="false"/>
		
		<!-- This property defines the expression for evaluating whether an FoD 
		     vulnerability should be considered open or closed. This expression
		     can use any FoD vulnerability attribute. Commonly used attributes
		     for this expression include closedStatus and isSuppressed. -->
		<property name="isVulnerabilityOpenExpression"><value><![CDATA[
			closedStatus==false && isSuppressed==false
		]]></value></property>
	</bean>
	
	<!--==================================================================================-->
	<!-- FOD RELEASE FILTERS AND CONTEXT MAPPING CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean allows for defining a static mapping between application and release name,
	     and corresponding context properties. This can for example be used to map FoD release 
	     names to a corresponding output file.
	     
	     If no application releases have been specified on the command line, FortifyBugTrackerUtility 
	     will automatically process all application releases that match any of the mappings defined 
	     here. The keys defined here are regular expressions that are being matched against
	     [applicationName]:[releaseName]. The values are one or more context property
	     values in the format [contextProperty1]=[value1],[contextProperty2]=[value2],... 
	     Context property values can use Spring template expressions to reference release
	     JSON attributes, for example ${applicationName}. 
	     
	     This example configuration will match all application releases, and set the
	     OutputFile context property based on application and release name. -->
	<bean class="com.fortify.processrunner.fod.releases.FoDReleaseNameBasedContextGenerator">
		<property name="releaseNameMappings"><map>
			<entry key=".*" value="OutputFile=Vulnerabilities-${applicationName}-${releaseName}.csv"/>
		</map></property>
	</bean>
	
	<!-- Alternatively, you can comment out the static mapping above, and uncomment the 
	     attribute-based mapping here. This bean allows for automatically loading all 
	     FoD application release for which the corresponding application has a 
	     'Output File' attribute set, and automatically using that attribute value 
	     to generate the OutputFile context property for each release being processed. 
	     
	     Note that all releases for any matching applications will be processed; if this is not
	     desired you will need to (also) use the static mapping above to filter on specific
	     release names.
	     -->
	<!-- 
	<bean class="com.fortify.processrunner.fod.releases.FoDApplicationAttributeBasedContextGenerator">
		<property name="requiredAttributeMappings"><map>
			<entry key="Output File" value="OutputFile"/>
		</map></property>
	</bean>
	-->
	
	<!--==================================================================================-->
	<!-- CSV FILE EXPORT CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the context for the FoD to File export processing. All of these
	     properties can also be specified on the command line. -->
	<util:map id="contextProperties">
		<!-- TODO Add all possible properties -->
		<entry key="" value=""/>
	</util:map>
	
	<!-- This bean defines the bug tracker fields to be submitted or updated. If necessary, 
	     you can change the properties in this bean, for example to change the fields and 
	     field data submitted to the bug tracker. 
	-->
	<bean class="com.fortify.processrunner.bugtracker.common.target.config.BugTrackerFieldConfiguration">
		<property name="fields"><map>
			<entry key="id" value="${id}"/>
			<entry key="vulnId" value="${vulnId}"/>
			<entry key="category" value="${category}"/>
			<entry key="primaryLocationFull" value="${primaryLocationFull}"/>
			<entry key="severity" value="${severityString}"/>
			<entry key="deepLink" value="${deepLink}"/>
		</map></property>
	</bean>
	
	<!-- This bean defines the processor configuration for writing FoD vulnerability
	     data to a file. If necessary, you can change the properties in this bean, for 
	     example to change the grouping expression.
	-->
	<bean id="fodToFileIssueSubmitter" class="com.fortify.processrunner.file.ProcessorFileSubmitIssueForVulnerabilities">
		<property name="groupTemplateExpression" value="${#ctx.OutputFile}"/>
	</bean>
	
</beans>
