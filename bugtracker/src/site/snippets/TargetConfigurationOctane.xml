<?xml version="1.0" encoding="UTF-8"?>
<!--
  (c) Copyright 2017 EntIT Software LLC, a Micro Focus company
  
  Permission is hereby granted, free of charge, to any person obtaining a 
  copy of this software and associated documentation files (the 
  "Software"), to deal in the Software without restriction, including without 
  limitation the rights to use, copy, modify, merge, publish, distribute, 
  sublicense, and/or sell copies of the Software, and to permit persons to 
  whom the Software is furnished to do so, subject to the following 
  conditions:
  
  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  IN THE SOFTWARE.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!-- START SNIPPET: bean -->
	<bean class="com.fortify.bugtracker.tgt.octane.config.OctaneTargetConfiguration">
		<!-- Expression for grouping vulnerabilities into a single issue. Grouping
		     can be disabled by setting the DisableGrouping context property to 'true'. -->
		<property name="groupTemplateExpression" value="${issueName}+${fullFileName}"/>
		
		<property name="fields"><map>
			<!-- TODO Add additional Octane fields -->
			<entry key="name" value="SSC Detected ${issueName} at ${fullFileName}"/>
			<entry key="description"><value><![CDATA[
				<b>--- Changes to the description will be overwritten when FortifyBugTrackerUtility updates issues states ---</b><br/>
				<table>
					<tr><td>Category:</td><td>${issueName}</td></tr>
					<tr><td>File Name:</td><td>${fullFileName}</td></tr>
				</table><br/>
			]]></value></entry> 
			<entry key="phase.type" value="phase"/>
			<entry key="phase.name" value="New"/>
			<entry key="parent.type" value="work_item"/>
			<entry key="parent.name" value="Backlog"/>
			<!-- Use the following to attach to a feature instead: -->
			<!--
			<entry key="parent.type" value="feature"/>
			<entry key="parent.name" value="SomeFeatureName"/> 
			 -->
		</map></property>
		<!-- Define extra data to be appended to one or more of the fields defined
		     by issue.fields above. For non-grouped vulnerabilities, we could just 
		     as well have appended these expressions to the corresponding
		     issue.fields entry above. However, using issue.appendedFields allows 
		     us to re-use the same issue field configuration for grouped issues.
		-->
		<property name="appendedFields"><map>
			<entry key="description"><value><![CDATA[
				<table>
					<tr><td>Id:</td><td>${id}</td></tr>
					<tr><td>State:</td><td>${vulnState}</td></tr>
					<tr><td>Line:</td><td>${lineNumber?:'Unknown'}</td></tr>
					<tr><td>Link:</td><td><a href="${deepLink}">${deepLink}</a></td></tr>
					<tr><td>Last Scan Date:</td><td>${lastArtifact.lastScanDate}</td></tr>
					<tr><td>Comments:</td><td>${T(String).join('<br/>', comments.![auditTime+': '+comment])}</td></tr>
				</table><br/>
			]]></value></entry> 
		</map></property>
		
		<!-- Update the Octane description field when updating issue state -->
		<property name="fieldsToUpdateDuringStateManagement" value="description"/>
	
		<!-- Define when a Octane issue is considered re-openable or closeable. These expressions
		     can utilize the phase.name, phase.id and type fields. If not defined, an issue is 
		     considered openable/closeable if a valid transition exists. -->
		<!--
		<property name="isIssueOpenableExpression"><value><![CDATA[
			phase.name matches 'something|something else'
		]]></value></property>
		<property name="isIssueCloseableExpression"><value><![CDATA[
			
		]]></value></property>
		-->
		
		<!-- Define the transitions for re-opening and closing issues. The map key defines an expression
		     that defines when to use a specific transition; this is usually based on issue phase.name.
		     The map value defines one or more names of transitions that need to be performed in order to 
		     re-open or close an issue. For each transition, you can specify an optional comment between
		     brackets. If your Octane instance uses non-standard workflows, you may need to update these
		     mappings.-->
		<property name="transitionsForOpeningIssue"><map>
			<!-- Octane default workflow -->
			<entry key="phase.name matches 'Fixed'" value="Opened[Issue re-opened by FoDBugTrackerUtility]"/>
		</map></property>
		<property name="transitionsForClosingIssue"><map>
			<!-- Octane default workflow -->
			<entry key="phase.name matches 'New|Deferred'"><list>
				<value>Opened[Intermediate transition performed by FoDBugTrackerUtility]</value>
				<value>Fixed[Intermediate transition performed by FoDBugTrackerUtility]</value>
				<value>Closed[Issue closed by FoDBugTrackerUtility]</value>
			</list></entry>
			<entry key="phase.name matches 'Opened'"><list>
				<value>Fixed[Intermediate transition performed by FoDBugTrackerUtility]</value>
				<value>Closed[Issue closed by FoDBugTrackerUtility]</value>
			</list></entry>
			<entry key="phase.name matches 'Fixed'" value="Closed[Issue closed by FoDBugTrackerUtility]"/>
		</map></property>
	</bean>
	<!-- END SNIPPET: bean -->
	
</beans>
