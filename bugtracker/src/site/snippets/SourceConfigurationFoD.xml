<?xml version="1.0" encoding="UTF-8"?>
<!--
  (c) Copyright 2017 EntIT Software LLC, a Micro Focus company
  
  Permission is hereby granted, free of charge, to any person obtaining a 
  copy of this software and associated documentation files (the 
  "Software"), to deal in the Software without restriction, including without 
  limitation the rights to use, copy, modify, merge, publish, distribute, 
  sublicense, and/or sell copies of the Software, and to permit persons to 
  whom the Software is furnished to do so, subject to the following 
  conditions:
  
  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY 
  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  IN THE SOFTWARE.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!-- START SNIPPET: bean -->
	<bean class="com.fortify.bugtracker.src.fod.config.FoDSourceVulnerabilitiesConfiguration">	
		<!-- By default, the following fields can be referenced in configuration files when using FoD
		     as the source system:
		     * ${fieldName}
		       Any field returned by the FoD /api/v3/Releases/{ReleaseId}/vulnerabilities endpoint
		     * ${deepLink}
		       Browser-viewable deep link to FoD vulnerability
		     * ${bugLink}
		       Native FoD bug link, or bug link as stored in comments (see addBugDataAsComment and addNativeBugLink below)
		     * ${summary.fieldName} 
		       Any field returned by the FoD /api/v3/releases/{ReleaseId}/vulnerabilities/{vulnId}/summary endpoint
		     * TODO: Release fields and deeplink
		       
		     The extraVulnerabilityData property can be used to retrieve additional data from FoD. Each entry defines
		     a property name as key, and relative API endpoint URI as value. The URI may contain request parameters
		     like 'fields' or 'embed'. All fields returned by such an endpoint can then be referenced through
		     ${key.fieldName}.
		     
		     These endpoints are called on-demand whenever a corresponding property is requested, and will be cached
		     for individual vulnerabilities. If you define any endpoints that are relevant for multiple vulnerabilities
		     (i.e. related to application release, scans, ...), you may want to add ';cache=true' to the endpoint URI 
		     to avoid calling the same endpoint for each vulnerability.
		-->
		<property name="extraVulnerabilityData"><map>
			<entry key="details" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/details"/>
			<entry key="recommendations" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/recommendations"/>
			<entry key="screenshots" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/screenshots"/>
			<entry key="history" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/history"/>
			<entry key="requestresponse" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/request-response"/>
			<entry key="headers" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/headers"/>
			<entry key="parameters" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/parameters"/>
			<entry key="traces" value="/api/v3/releases/${releaseId}/vulnerabilities/${vulnId}/traces"/>
			<entry key="scan" value="/api/v3/releases/${releaseId}/scans/${scanId};cache=true"/>
		</map></property>
	
		<!-- Set the FoD filter string to get the list of vulnerabilities to be submitted to
		     the external system. Information about the format of this filter string can be
		     found in the FoD API documentation, and you can use the FoD API Explorer to test
		     your filter strings. -->
		<property name="filterStringForVulnerabilitiesToBeSubmitted"><value>
			severityString:Critical|High+isSuppressed=false
		</value></property>
		
		<!-- Set additional filters for vulnerabilities to be submitted to the external
		     system, if you require any filtering that cannot be performed by FoD directly. -->
		<property name="regExFiltersForVulnerabilitiesToBeSubmitted"><map>
			<!-- <entry key="someField.someSubField" value="Regular Expression"/> -->
		</map></property>
		
		<!-- Specify whether, and how information about the submitted vulnerabilities
		     should be added to FoD. If all of these are disabled, no information
		     about the submitted vulnerability will be stored in FoD, resulting in
		     all vulnerabilities being submitted again on a next invocation, and
		     disabling bug state management. You should enable at most one of these
		     options. Bug data can either be stored as a vulnerability comment, or
		     as a native FoD bug link. -->
		<property name="addBugDataAsComment" value="true"/>
		<property name="addNativeBugLink" value="false"/>
		
		<!-- This property defines the expression for evaluating whether an FoD 
		     vulnerability should be considered open or closed. This expression
		     can use any FoD vulnerability attribute. Commonly used attributes
		     for this expression include closedStatus and isSuppressed. -->
		<property name="isVulnerabilityOpenExpression"><value><![CDATA[
			closedStatus==false && isSuppressed==false
		]]></value></property>
	</bean>
	<!-- END SNIPPET: bean -->
</beans>
