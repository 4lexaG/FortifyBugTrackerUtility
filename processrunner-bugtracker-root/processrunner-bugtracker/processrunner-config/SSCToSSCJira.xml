<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
		
	<import resource="components/input/SSCInputConfig.xml"/>
	
	<!--==================================================================================-->
	<!-- JIRA VIA SSC CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the context for the SSC to JIRA via SSC processing. All of these
	     properties can also be specified on the command line. -->
	<util:map id="contextProperties">
		<!-- TODO Add all possible properties -->
		<entry key="" value=""/>
	</util:map>
	
	<!-- This bean defines the processor configuration for submitting
	     vulnerabilities to JIRA via SSC. If necessary, you can change the properties 
	     in this bean, for example to change the grouping expression, fields 
	     and field data submitted to JIRA via SSC. 
	-->
	<bean id="sscToSSCJiraIssueSubmitter" class="com.fortify.processrunner.ssc.processor.ProcessorSSCSubmitIssueForVulnerabilities">
		<!-- Expression for grouping vulnerabilities into a single issue. Grouping
		     can be disabled by setting the DisableGrouping context property to 'true'. -->
		<property name="groupTemplateExpression" value="${issueName}+${fullFileName}"/>
		
		<property name="fieldTypes"><map>
			<!-- TODO Add examples for recommendations etcetera -->
			<entry key="Summary" value="BUGPARAM_TEXT"/>
			<entry key="Description" value="BUGPARAM_TEXT"/>
			<entry key="project" value="BUGPARAM_CHOICE"/>
			<entry key="issuetype" value="BUGPARAM_CHOICE"/>
		</map></property>
	
		<property name="fields"><map>
			<!-- TODO Add examples for recommendations etcetera -->
			<!-- 
			<entry key="Summary"><value>Fix #if ($issues.size() == 1) $issues.get(0).get("ATTRIBUTE_CATEGORY") in $issues.get(0).get("ATTRIBUTE_FILE") #else $ATTRIBUTE_CATEGORY #end</value></entry>
			<entry key="Description"><value>#macro( addcontent $attrib )
#if($is.get($attrib))$is.get($attrib) $newline $newline #end    
#end  
  
$newline  
#if ($issues.size() == 1)   
    #set ($is = $issues.get(0))  
    #addcontent("ISSUE_DESCRIPTION")  
    Issue Link: #addcontent("ISSUE_DEEPLINK")  
    Issue Instance Id: #addcontent("ATTRIBUTE_INSTANCE_ID")  
    File Name:  #addcontent("ATTRIBUTE_FILE")  
    Line Number: #addcontent("ATTRIBUTE_LINE")  
    Issue Category: #addcontent("ATTRIBUTE_CATEGORY")  
    Application Name: #addcontent("PROJECT_NAME")  
    Application Version Name: #addcontent("PROJECTVERSION_NAME") 
    Custom Tags: $newline#addcontent("ISSUE_CUSTOMTAGS") 
    Issue Detail: #addcontent("ISSUE_DETAIL") 
    Issue Recommendation: $newline#addcontent("ISSUE_RECOMMENDATION") 
    Comments: $newline#addcontent("ATTRIBUTE_COMMENTS")  

#else 
  Issue Listing 
  $newline 
  #foreach( $is in $issues ) 
    Issue Link:  $is.get("ISSUE_DEEPLINK") $newline File Name: $is.get("ATTRIBUTE_FILE") $newline $newline 
  #end 

#end </value></entry>-->
			<entry key="project" value="TST"/>
			<entry key="issuetype" value="Bug"/>
		</map></property>
	</bean>
	
</beans>
