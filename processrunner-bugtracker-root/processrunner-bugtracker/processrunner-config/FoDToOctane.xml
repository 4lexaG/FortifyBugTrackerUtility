<?xml version="1.0" encoding="UTF-8"?>
<!--
  (c) Copyright 2017 Hewlett Packard Enterprise Development LP
  
  Permission is hereby granted, free of charge, to any person obtaining a
  copy of this software and associated documentation files (the Software"),
  to deal in the Software without restriction, including without limitation 
  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Software, and to permit persons to whom the 
  Software is furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  IN THE SOFTWARE.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<import resource="components/input/FoDInputConfig.xml"/>
	
	<!--==================================================================================-->
	<!-- FOD RELEASE FILTERS AND CONTEXT MAPPING CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean allows for defining a static mapping between application and release name,
	     and corresponding context properties. This can for example be used to map FoD release 
	     names to the corresponding Octane workspace id.
	     
	     If no application releases have been specified on the command line, FortifyBugTrackerUtility 
	     will automatically process all application releases that match any of the mappings defined 
	     here. The keys defined here are regular expressions that are being matched against
	     [applicationName]:[releaseName]. The values are one or more context property
	     values in the format [contextProperty1]=[value1],[contextProperty2]=[value2],... 
	     Context property values can use Spring template expressions to reference release
	     JSON attributes, for example ${applicationName}. 
	     
	     The mappings below are just examples; you will need to update these to match your
	     FoD application and release names. -->
	<bean class="com.fortify.processrunner.fod.releases.FoDReleaseNameFilterAndMapper">
		<property name="releaseNameMappings"><map>
			<entry key="MyApp:MyRelease" value="OctaneWorkspaceId=5"/>
			<entry key="MyOtherApp:.*" value="OctaneWorkspaceId=6"/>
		</map></property>
	</bean>
	
	<!-- Alternatively, you can comment out the static mapping above, and uncomment the 
	     attribute-based mapping here. This bean allows for automatically loading all 
	     FoD application release for which the corresponding application has a 
	     'Octane Workspace Id' attribute and optional 'Octane Shared Space Uid' attribute
	     set, and automatically using those attribute value to generate the 
	     OctaneWorkspaceId and OctaneSharedSpaceUid context properties for each release 
	     being processed. 
	     
	     Note that all releases for any matching applications will be processed; if this is not
	     desired you will need to (also) use the static mapping above to filter on specific
	     release names.
	     -->
	<!-- 
	<bean class="com.fortify.processrunner.fod.releases.FoDApplicationAttributeFilterAndMapper">
		<property name="requiredAttributeMappings"><map>
			<entry key="Octane Workspace Id" value="OctaneWorkspaceId"/>
		</map></property>
		<property name="optionalAttributeMappings"><map>
			<entry key="Octane Shared Space Uid" value="OctaneSharedSpaceUid"/>
		</map></property>
	</bean>
	-->
	
	<!--==================================================================================-->
	<!-- ALM OCTANE CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the context for the FoD to ALM Octane processing. All of these
	     properties can also be specified on the command line. -->
	<util:map id="contextProperties">
		<!-- TODO Add all possible properties -->
		<entry key="" value=""/>
	</util:map>
	
	<!-- This bean defines the bug tracker fields to be submitted or updated. If necessary, 
	     you can change the properties in this bean, for example to change the fields and 
	     field data submitted to the bug tracker. 
	-->
	<bean class="com.fortify.processrunner.common.bugtracker.issue.BugTrackerFieldConfiguration">
		<property name="fields"><map>
			<!-- TODO Add additional Octane fields -->
			<entry key="name" value="FoD Detected ${category} at ${primaryLocationFull}"/>
			<entry key="description"><value><![CDATA[
				<b>--- Changes to the description will be overwritten when FortifyBugTrackerUtility updates issues states ---</b><br/>
				<table>
					<tr><td>Category:</td><td>${category}</td></tr>
					<tr><td>File Name:</td><td>${primaryLocationFull}</td></tr>
				</table><br/>
			]]></value></entry> 
			<entry key="phase.type" value="phase"/>
			<entry key="phase.name" value="New"/>
			<entry key="parent.type" value="work_item"/>
			<entry key="parent.name" value="Backlog"/>
			<!-- Use the following to attach to a feature instead: -->
			<!--
			<entry key="parent.type" value="feature"/>
			<entry key="parent.name" value="SomeFeatureName"/> 
			 -->
		</map></property>
		<!-- Define extra data to be appended to one or more of the fields defined
		     by issue.fields above. For non-grouped vulnerabilities, we could just 
		     as well have appended these expressions to the corresponding
		     issue.fields entry above. However, using issue.appendedFields allows 
		     us to re-use the same issue field configuration for grouped issues.
		-->
		<property name="appendedFields"><map>
			<entry key="description"><value><![CDATA[
				<table>
					<tr><td>Id:</td><td>${id}</td></tr>
					<tr><td>State:</td><td>${vulnState}</td></tr>
					<tr><td>Line:</td><td>${lineNumber?:'Unknown'}</td></tr>
					<tr><td>Link:</td><td><a href="${deepLink}">${deepLink}</a></td></tr>
				</table><br/>
			]]></value></entry> 
		</map></property>
		
		<!-- Update the Octane description field when updating issue state -->
		<property name="fieldsToUpdateDuringStateManagement" value="description"/>
	</bean>
	
	<!-- This bean defines the processor configuration for submitting FoD vulnerabilities 
	     to Octane. If necessary, you can change the properties in this bean, for example 
	     to change the grouping expression. 
	-->
	<bean class="com.fortify.processrunner.octane.processor.ProcessorOctaneSubmitIssueForVulnerabilities">
		<!-- Expression for grouping vulnerabilities into a single issue. Grouping
		     can be disabled by setting the DisableGrouping context property to 'true'. -->
		<property name="groupTemplateExpression" value="${category}+${primaryLocationFull}"/>
	</bean>
	
	<import resource="components/issueState/OctaneIssueState.xml"/>
</beans>
