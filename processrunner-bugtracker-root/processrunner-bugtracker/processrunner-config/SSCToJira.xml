<?xml version="1.0" encoding="UTF-8"?>
<!--
  (c) Copyright 2017 Hewlett Packard Enterprise Development LP
  
  Permission is hereby granted, free of charge, to any person obtaining a
  copy of this software and associated documentation files (the Software"),
  to deal in the Software without restriction, including without limitation 
  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Software, and to permit persons to whom the 
  Software is furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  IN THE SOFTWARE.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
		
	<import resource="components/input/SSCInputConfig.xml"/>
	
	<!--==================================================================================-->
	<!-- SSC APPLICATION VERSION FILTERS AND CONTEXT MAPPING CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean allows for automatically loading all SSC application versions that
	     have a 'Jira Project Key' attribute set, and automatically using that attribute
	     value to generate the JiraProjectKey context property for each application
	     version being processed. -->
	<bean class="com.fortify.processrunner.ssc.appversion.SSCApplicationVersionAttributeFilterAndMapper">
		<property name="requiredAttributeMappings"><map>
			<entry key="Jira Project Key" value="JiraProjectKey"/>
		</map></property>
	</bean>
	
	<!-- Alternatively, you can comment out the attribute-based mapping above, and uncomment 
	     the static mapping here. This allows for maintaining a static mapping between 
	     application version names and corresponding context properties in this configuration
	     file, instead of configuring the mappings through SSC application version attributes.
	     
	     If no application releases have been specified on the command line, FortifyBugTrackerUtility 
	     will automatically process all application releases that match any of the mappings defined 
	     here. The keys defined here are regular expressions that are being matched against
	     [applicationName]:[versionName]. The values are one or more context property
	     values in the format [contextProperty1]=[value1],[contextProperty2]=[value2],... 
	     Context property values can use Spring template expressions to reference release
	     JSON attributes, for example ${project.name} and ${name} (version name). 
	     
	     The mappings below are just examples; you will need to update these to match your
	     SSC application and version names. -->
	<!--
	<bean class="com.fortify.processrunner.ssc.appversion.SSCApplicationVersionNameFilterAndMapper">
		<property name="applicationVersionNameMappings"><map>
			<entry key="MyApp:MyVersion" value="JiraProjectKey=APP"/>
			<entry key="MyOtherApp:.*" value="JiraProjectKey=OTHER"/>
			<entry key=".*:current" value="JiraProjectKey=${project.name}"/>
		</map></property>
	</bean>
	-->	
	
	<!--==================================================================================-->
	<!-- JIRA CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the context for the SSC to JIRA processing. All of these
	     properties can also be specified on the command line. -->
	<util:map id="contextProperties">
		<!-- TODO Add all possible properties -->
		<entry key="" value=""/>
	</util:map>
	
	<!-- This bean defines the processor configuration for submitting
	     vulnerabilities to JIRA. If necessary, you can change the properties 
	     in this bean, for example to change the grouping expression, fields 
	     and field data submitted to JIRA. 
	-->
	<bean id="sscToJiraIssueSubmitter" class="com.fortify.processrunner.jira.processor.ProcessorJiraSubmitIssueForVulnerabilities">
		<!-- Expression for grouping vulnerabilities into a single issue. Grouping
		     can be disabled by setting the DisableGrouping context property to 'true'. -->
		<property name="groupTemplateExpression" value="${issueName}+${fullFileName}"/>
	
		<property name="fields"><map>
			<!-- TODO Add examples for recommendations etcetera -->
			<entry key="summary" value="SSC Detected ${issueName} at ${fullFileName}"/>
			<entry key="description" value="--- Changes to the description will be overwritten when FortifyBugTrackerUtility updates issues states ---\n\nCategory: ${issueName} at ${fullFileName}"/>
			<entry key="priority.name" value="${{'Critical':'Highest','High':'High','Medium':'Medium','Low':'Low'}.get(friority)}"/>
			<entry key="labels" value="${{'SSC'}}"/>
		</map></property>

		<!-- Define extra data to be appended to one or more of the fields defined
		     by issue.fields above. For non-grouped vulnerabilities, we could just 
		     as well have appended these expressions to the corresponding
		     issue.fields entry above. However, using issue.appendedFields allows 
		     us to re-use the same issue field configuration for grouped issues.
		-->
		<property name="appendedFields"><map>
			<entry key="description" value="\n\nId: ${id}\nState: ${vulnState}\nLine: ${lineNumber?:'Unknown'}\nLink: ${deepLink}"/>
		</map></property>
	</bean>
	
	<import resource="components/issueState/JiraIssueState.xml"/>
	
</beans>
