<?xml version="1.0" encoding="UTF-8"?>
<!--
  (c) Copyright 2017 Hewlett Packard Enterprise Development LP
  
  Permission is hereby granted, free of charge, to any person obtaining a
  copy of this software and associated documentation files (the Software"),
  to deal in the Software without restriction, including without limitation 
  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Software, and to permit persons to whom the 
  Software is furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  IN THE SOFTWARE.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
		
	<import resource="components/input/SSCInputConfig.xml"/>
	
	<!--==================================================================================-->
	<!-- SSC APPLICATION VERSION FILTERS AND CONTEXT MAPPING CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- The default configuration assumes that you have a default team project configured 
	     in the SSC TFS/Visual Studio Online bug tracker configuration.
	     If you don't have a default value configured in SSC, or want to override the 
	     default value, you can uncomment this bean to load the default value from
	     the 'TFS Team Project' application version attribute. -->
	<!-- 
	<bean class="com.fortify.processrunner.ssc.appversion.SSCApplicationVersionAttributeFilterAndMapper">
		<property name="requiredAttributeMappings"><map>
			<entry key="TFS Team Project" value="TFSTeamProject"/>
		</map></property>
	</bean>
	-->
	
	<!-- Alternatively, instead of the attribute-based mapping above, you can also define
	     a static mapping. This allows for maintaining a static mapping between 
	     application version names and corresponding context properties in this configuration
	     file, instead of configuring the mappings through SSC application version attributes.
	     
	     If no application releases have been specified on the command line, FortifyBugTrackerUtility 
	     will automatically process all application releases that match any of the mappings defined 
	     here. The keys defined here are regular expressions that are being matched against
	     [applicationName]:[versionName]. The values are one or more context property
	     values in the format [contextProperty1]=[value1],[contextProperty2]=[value2],... 
	     Context property values can use Spring template expressions to reference release
	     JSON attributes, for example ${project.name} and ${name} (version name). 
	     
	     The mappings below are just examples; you will need to update these to match your
	     SSC application and version names. -->
	<!--
	<bean class="com.fortify.processrunner.ssc.appversion.SSCApplicationVersionNameFilterAndMapper">
		<property name="applicationVersionNameMappings"><map>
			<entry key="MyApp:MyVersion" value="TFSTeamProject=MyProject"/>
			<entry key="MyOtherApp:.*" value="TFSTeamProject=MyOtherProject"/>
			<entry key=".*:current" value="TFSTeamProject=${project.name}"/>
		</map></property>
	</bean>
	-->	
	
	<!--==================================================================================-->
	<!-- SSC TO SSC NATIVE BUG TRACKER INTEGRATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the context for the SSC to JIRA via SSC processing. All of these
	     properties can also be specified on the command line. -->
	<util:map id="contextProperties">
		<!-- TODO Add all possible properties -->
		<entry key="" value=""/>
	</util:map>
	
	<!-- This bean defines the bug tracker fields to be submitted or updated. If necessary, 
	     you can change the properties in this bean, for example to change the fields and 
	     field data submitted to the bug tracker. Any fields not defined here will use the 
	     default values as configured in the SSC bug tracker configuration. 
	-->
	<bean class="com.fortify.processrunner.common.issue.BugTrackerFieldConfiguration">
		<property name="fields"><map>
			<!-- Uncomment this to override the default collection configured in SSC -->
			<!-- <entry key="Collection" value="DefaultCollection"/> -->
			
			<!-- Uncomment this to override the default project configured in SSC,
			     based on the static or attribute-based mappings above. -->
			<!-- <entry key="System.TeamProject" value="${#ctx.TFSTeamProject}"/> -->
			
			<!-- Override the work item type to use (even if a default value has been 
			     configured in SSC) -->
			<entry key="System.WorkItemType" value="Bug"/>
		</map></property>
	</bean>
	
	<!-- This bean defines the processor configuration for submitting
	     vulnerabilities via the native SSC TFS/Visual Studio Online
	     bug tracker plugin. If necessary, you can change the properties 
	     in this bean, for example to change the grouping expression. Note 
	     that this processor will filter application versions based on 
	     whether they have the TFS/Visual Studio Online bug tracker configured.
	-->
	<bean class="com.fortify.processrunner.ssc.processor.ProcessorSSCSubmitIssueForVulnerabilities">
		<!-- Define the bug tracker name as it is known in SSC -->
		<property name="sscBugTrackerName" value="TFS/Visual Studio Online"/>
					
		<!-- Expression for grouping vulnerabilities into a single issue. Grouping
		     can be disabled by setting the DisableGrouping context property to 'true'. -->
		<property name="groupTemplateExpression" value="${issueName}+${fullFileName}"/>
	</bean>
	
</beans>
