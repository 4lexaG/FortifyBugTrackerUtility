<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!--==================================================================================-->
	<!-- FoD CONNECTION CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines a proxy configuration used to access FoD. By default
	     no proxy is used. If necessary, proxy settings can either be entered here,
	     or using -FoDProxyUrl, -FoDProxyUserName and -FoDProxyPassword command line
	     options. If a proxy user name is specified without a password, the user
	     will be prompted to enter the proxy password. -->
	<bean id="fodProxy" class="com.fortify.processrunner.util.rest.ContextAwareProxyConfiguration">
		<property name="name" value="FoD"/>
		<!-- <property name="uri" value="http://proxy:port/"/> -->
		<!-- <property name="userName" value="proxy user (optional)"/> -->
		<!-- <property name="password" value="proxy password (optional)"/> -->
	</bean>
	
	<!-- Define FoD connection information like base URL, user or client 
	     credentials, and optional proxy.
	     
	     If you require a different FoD instance, you can either change the
	     base URL here, or provide the correct FoD base URL via the
	     -FoDBaseUrl command line option (which will override the base URL 
	     configured here).
	     
	     For authentication with user credentials, tenant, user name and 
	     password can either be configured here, or provided via the 
	     command line options -FoDTentant, -FoDUserName and -FoDPassword 
	     respectively. Alternatively, if tenant, user name and/or 
	     password have not been provided either here or via command line options, 
	     the user will be prompted to enter the corresponding values.  
	     
	     For authentication with client credentials, client ID and Secret 
	     can either be configured here, or provided via the command line 
	     options -FoDClientId and -FoDClientSecret. If not provided via 
	     either configuration or command line option, the user will be 
	     prompted for the client ID and/or client secret to use. 
	     
	     TOOD Update comment to explain when user or client credentials 
	     will be used
	-->
	<bean id="fodConnectionRetriever" class="com.fortify.processrunner.fod.connection.ContextAwareFoDConnectionRetrieverUserOrClientCredentials">
		<property name="baseUrl" value="https://emea.hpfod.com/"/>
		<property name="proxy" ref="fodProxy"/>
		
		<!-- Authentication via user credentials -->
		<!-- <property name="userCreds.tenant" value="tenant" /> -->
		<!-- <property name="userCreds.userName" value="username"/> -->
		<!-- <property name="userCreds.password" value="password"/> -->
		
		<!-- Authentication via client credentials -->
		<!-- <property name="clientCreds.clientId" value="API key"/> -->
		<!-- <property name="clientCreds.clientSecret" value="client secret"/> -->
	</bean>
	
	
	<!--==================================================================================-->
	<!-- FoD VULNERABILITY RETRIEVAL CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This abstract bean defines common configuration options for  -->
	
	<bean id="fodProcessorCommonProperties" abstract="true">
		<!-- Define any extra data that must be loaded from FoD for filtering 
		     and/or building the issue contents. Note that previous versions
		     automatically loaded summary data, but this is no longer the case
		     if useFoDCommentForSubmittedBugs is set to false.
		     If your customized configuration depends on summary data, you 
		     will need to enable the summary field here. -->
		<property name="extraFields"><list>
			<!-- <value>summary</value> -->
			<!-- <value>details</value> -->
			<!-- <value>recommendations</value> -->
			<!-- <value>screenshots</value> -->
			<!-- <value>history</value> -->
			<!-- <value>requestResponse</value> -->
			<!-- <value>headers</value> -->
			<!-- <value>parameters</value> -->
			<!-- <value>traces</value> -->
		</list></property>
		
		<!-- This flag can be set to true to add information about submitted bugs to 
		     FoD vulnerability comments. By default (false), the bug link will
		     be stored in the dedicated FoD bugLink field. Since the concrete
		     processors defined below require different settings, each concrete
		     processor explicitly sets this property. -->
		<!-- <property name="useFoDCommentForSubmittedBugs" value="false"/> -->
		
		<!-- This property defines the expression for evaluating whether an FoD 
		     vulnerability should be considered open or closed. This expression
		     can use any FoD vulnerability attribute. Commonly used attributes
		     for this expression include closedStatus and isSuppressed. -->
		<property name="vulnState.isVulnerabilityOpenExpression"><value><![CDATA[
			closedStatus==false && isSuppressed==false
		]]></value></property>
	</bean>
	
	<!-- This abstract bean defines common configuration options for retrieving
	     vulnerabilities from FoD that need to be submitted to a bug tracker.
	     This includes options like vulnerability filter options and extra
	     data to be retrieved. 
	     
	     Some of the options are inherited from the fodProcessorCommonProperties
	     bean defined above, since they are shared with fodUpdateBugTrackerState.
	     
	     Each of these properties can either be changed here (if all processor
	     configurations that you use require the same settings), or overridden 
	     in the concrete processor configurations below (if you use multiple
	     processor configurations that require different settings). 
	-->
	<bean id="fodSubmitVulnerabilitiesToBugTracker" abstract="true" parent="fodProcessorCommonProperties" class="com.fortify.processrunner.fod.processor.composite.FoDProcessorSubmitFilteredVulnerabilitiesToBugTracker">		
		<!-- Define the filters that determine which FoD vulnerabilities will
		     be submitted to the bug tracker or file.
		     
		     fod.topLevelFieldFilters allows equality-based filtering on any 
		     vulnerability attribute returned by /api/v3/Releases/${FoDReleaseId}/vulnerabilities
		     Where possible, these filters are processed by FoD, reducing the
		     number of vulnerabilities returned by FoD. As such, these filters 
		     provide best performance. Values may contain the '|' operator to
		     match against multiple allowed values.
		     
		     fod.topLevelFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by /api/v3/Releases/${FoDReleaseId}/vulnerabilities
		     These filters are used before loading any extra fields from FoD
		     (see fod.extraFields above) and thus provide medium performance.
		     
		     fod.allFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by either 
		     /api/v3/Releases/${FoDReleaseId}/vulnerabilities or the
		     extra fields as specified via fod.extraFields above. Since these
		     filters are only applied after loading all extra data from FoD,
		     these filters provide worst performance. 
		-->
		<property name="topLevelFieldSimpleFilters"><map>
			<entry key="isSuppressed" value="false"/>
			<entry key="severityString" value="Critical|High"/>
			<!-- <entry key="hasComments" value="false"/> -->
			<!-- <entry key="assignedUser" value="Senden, Ruud"/> -->
			<!-- <entry key="developerStatus" value="In Remediation"/> -->
			<!-- <entry key="severity" value="4"/> -->
			<!-- TODO: Add additional interesting filter fields in comments -->
		</map></property>
		<property name="topLevelFieldRegExFilters"><map>
		</map></property>
		<property name="allFieldRegExFilters"><map>
		</map></property>
		
		<!-- This property defines the processor that actually submits FoD 
		     vulnerabilities to a bug tracker. The different bug tracker
		     implementations defined below explicitly set this property to
		     a corresponding processor. -->
		<!-- <property name="submitIssueProcessor" ref="actualProcessor"/> -->
	</bean>
	
	<!-- This abstract bean defines common configuration options for updating
	     bug tracker state based on FoD vulnerability state.
	     
	     Some of the options are inherited from the fodProcessorCommonProperties
	     bean defined above, since they are shared with fodSubmitVulnerabilitiesToBugTracker.
	     
	     Each of these properties can either be changed here (if all processor
	     configurations that you use require the same settings), or overridden 
	     in the concrete processor configurations below (if you use multiple
	     processor configurations that require different settings). 
	-->
	<bean id="fodUpdateBugTrackerState" abstract="true" parent="fodProcessorCommonProperties" class="com.fortify.processrunner.fod.processor.composite.FoDProcessorUpdateBugTrackerState">
		<!-- This property defines the processor that actually updates bug tracker 
		     state based on FoD vulnerability state. The different bug tracker 
		     implementations defined below explicitly set this property to a 
		     corresponding processor. -->
		<!-- <property name="updateIssueStateProcessor" ref="actualProcessor"/> -->
	</bean>
	
	<!--==================================================================================-->
	<!-- JIRA CONNECTION AND PROCESSOR CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines a proxy configuration used to access JIRA. By default
	     no proxy is used. If necessary, proxy settings can either be entered here,
	     or using -JiraProxyUrl, -JiraProxyUserName and -JiraProxyPassword command line
	     options. If a proxy user name is specified without a password, the user
	     will be prompted to enter the proxy password. -->
	<bean id="jiraProxy" class="com.fortify.processrunner.util.rest.ContextAwareProxyConfiguration">
		<property name="name" value="Jira"/>
		<!-- <property name="uri" value="http://proxy:port/"/> -->
		<!-- <property name="userName" value="proxy user (optional)"/> -->
		<!-- <property name="password" value="proxy password (optional)"/> -->
	</bean>
	
	<!-- Define JIRA connection information like base URL, user name and password. 
	     
	     Base URL, user name and password can either be configured here, or
	     provided via the -JiraBaseUrl, -JiraUserName and -JiraPassword command
	     line options. Alternatively, if user name and/or password have not been 
	     provided either here or via command line options, the user will be 
	     prompted to enter the corresponding value.
	-->
	<bean id="jiraConnectionRetriever" class="com.fortify.processrunner.jira.connection.ContextAwareJiraConnectionRetriever">
		<property name="proxy" ref="jiraProxy"/>
		<!-- <property name="baseUrl" value="http://192.168.99.100:32768/"/> -->
		<!-- <property name="userName" value="rsenden"/> -->
		<!-- <property name="password" value="password"/> -->
	</bean>
	
	<!-- This bean defines the processor configuration for submitting non-grouped
	     FoD vulnerabilities to JIRA. If necessary, you can change the properties 
	     in this bean, for example to change the fields and field data submitted 
	     to JIRA. 
	-->
	<bean id="fodToJiraIssueSubmitterNonGrouped" class="com.fortify.processrunner.jira.processor.ProcessorJiraSubmitIssueForVulnerabilities">
		<property name="fields"><map>
			<!-- TODO Add examples for recommendations etcetera -->
			<entry key="summary" value="FoD Detected ${category} at ${primaryLocationFull}"/>
			<entry key="description" value="--- Changes to the description will be overwritten when FoDBugTrackerUtility updates issues states ---\n\nCategory: ${category} at ${primaryLocationFull}"/>
			<entry key="priority.name" value="${{'Critical':'Highest','High':'High','Medium':'Medium','Low':'Low'}.get(severityString)}"/>
			<entry key="labels" value="${{'FoD'}}"/>
		</map></property>

		<!-- Define extra data to be appended to one or more of the fields defined
		     by issue.fields above. For non-grouped vulnerabilities, we could just 
		     as well have appended these expressions to the corresponding
		     issue.fields entry above. However, using issue.appendedFields allows 
		     us to re-use the same issue field configuration for grouped issues.
		-->
		<property name="appendedFields"><map>
			<entry key="description" value="\n\nId: ${id}\nState: ${vulnState}\nLine: ${lineNumber?:'Unknown'}\nLink: ${deepLink}"/>
		</map></property>
	</bean>
	
	<!-- This bean defines the processor configuration for submitting grouped FoD 
	     vulnerabilities to JIRA. Configuration is inherited from the non-grouped
	     variant; here we only add the grouping criteria. 
	-->
	<bean id="fodToJiraIssueSubmitterGrouped" parent="fodToJiraIssueSubmitterNonGrouped">
		<property name="groupTemplateExpression" value="${category}+${primaryLocationFull}"/>
	</bean>
	
	<!-- This bean defines the processor configuration for updating JIRA issue state
	     based on FoD vulnerability state. This processor can update issue fields,
	     automatically re-open issues, and automatically close issues. Each of these
	     actions is optional; if a property is not defined, the corresponding action
	     will not be performed.
	-->
	<bean id="fodToJiraIssueUpdater" class="com.fortify.processrunner.jira.processor.ProcessorJiraTransitionIssueStateForVulnerabilities">
		<!-- Update the JIRA description field by re-evaluating the corresponding description 
		     expressions defined on fodToJiraIssueSubmitterNonGrouped. As such, any changes in 
		     FoD fields referenced in the description expressions, like vulnerability state or 
		     line number, will be reflected in the updated JIRA description. -->
		<property name="fields"><map>
			<entry key="description" value="#{@fodToJiraIssueSubmitterNonGrouped.fields.description}"/>
		</map></property>
		<property name="appendedFields"><map>
			<entry key="description" value="#{@fodToJiraIssueSubmitterNonGrouped.appendedFields.description}"/>
		</map></property>
		
		<!-- Define when a JIRA issue is considered re-openable or closeable. These expressions
		     can utilize all properties in the status and resolution fields returned by the JIRA
		     REST API, usually you will want to match on status.name and/or resolution.name. If
		     not defined, an issue is considered openable/closeable if a valid transition exists. -->
		<!--
		<property name="isIssueOpenableExpression"><value><![CDATA[
			resolution.name matches 'something|something else'
		]]></value></property>
		<property name="isIssueCloseableExpression"><value><![CDATA[
			
		]]></value></property>
		-->
		
		<!-- Define the transitions for re-opening and closing issues. The map key defines an expression
		     that defines when to use a specific transition; this is usually based on issue status.name.
		     The map value defines one or more names of transitions that need to be performed in order to 
		     re-open or close an issue. For each transition, you can specify an optional comment between
		     brackets. If your JIRA instances uses non-standard workflows, you may need to update these
		     mappings.-->
		<property name="transitionsForOpeningIssue"><map>
			<!-- JIRA default workflow -->
			<entry key="status.name matches 'Closed|Resolved'" value="Reopen Issue[Issue re-opened by FoDBugTrackerUtility]"/>
			<!-- JIRA Software Simplified Workflow -->
			<entry key="status.name matches 'Done'" value="To Do[Issue re-opened by FoDBugTrackerUtility]"/>
		</map></property>
		<property name="transitionsForClosingIssue"><map>
			<!-- JIRA default workflow -->
			<entry key="status.name matches 'Open|In Progress|Reopened'" value="Close Issue[Issue closed by FoDBugTrackerUtility]"/>
			<!-- JIRA Software Simplified Workflow -->
			<entry key="status.name matches 'To Do|In Progress|In Review'" value="Done[Issue closed by FoDBugTrackerUtility]"/>
			<!-- Example on performing multiple transitions to reach the target state -->
			<entry key="status.name matches 'My Custom Status'"><list>
				<value>IntermediateTransition1</value> <!-- Transition without comment -->
				<value>IntermediateTransition2[Intermediate transition performed by FoDBugTrackerUtility]</value>
				<value>FinalTransition[Issue closed by FoDBugTrackerUtility]</value>
			</list></entry>
		</map></property>
	</bean>
	
	<!-- This bean combines fodSubmitVulnerabilitiesToBugTracker with the non-grouped 
	     Jira issue submitter. 
	-->
	<bean id="fodToJiraProcessorNonGrouped" parent="fodSubmitVulnerabilitiesToBugTracker">
		<property name="useFoDCommentForSubmittedBugs" value="false"/>
		<property name="submitIssueProcessor" ref="fodToJiraIssueSubmitterNonGrouped"/>
	</bean>
	
	<!-- This bean combines fodSubmitVulnerabilitiesToBugTracker with the grouped 
	     Jira issue submitter. 
	-->
	<bean id="fodToJiraProcessorGrouped" parent="fodSubmitVulnerabilitiesToBugTracker">
		<property name="useFoDCommentForSubmittedBugs" value="false"/>
		<property name="submitIssueProcessor" ref="fodToJiraIssueSubmitterGrouped"/>
	</bean>
	
	<!-- This bean combines fodUpdateBugTrackerState with fodToJiraIssueUpdater. 
	-->
	<bean id="fodToJiraProcessorUpdateBugTrackerState" parent="fodUpdateBugTrackerState">
		<property name="useFoDCommentForSubmittedBugs" value="false"/>
		<property name="updateIssueStateProcessor" ref="fodToJiraIssueUpdater"/>
	</bean>
	
	<!--==================================================================================-->
	<!-- JIRA PROCESS RUNNER CONFIGURATIONS -->
	<!--==================================================================================-->
	
	<!-- This process runner submits grouped vulnerabilities to JIRA -->
	<bean id="fodToJiraGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit grouped vulnerabilities from FoD to JIRA"/>
		<property name="processor" ref="fodToJiraProcessorGrouped"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetriever"/>
			<entry key="JiraConnectionRetriever" value-ref="jiraConnectionRetriever"/>
		</map></property>
	</bean>
	
	<!-- This process runner submits non-grouped vulnerabilities to JIRA -->
	<bean id="fodToJiraNonGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit non-grouped vulnerabilities from FoD to JIRA"/>
		<property name="processor" ref="fodToJiraProcessorNonGrouped"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetriever"/>
			<entry key="JiraConnectionRetriever" value-ref="jiraConnectionRetriever"/>
		</map></property>
	</bean>
	
	<!-- This process runner submits non-grouped vulnerabilities to JIRA -->
	<bean id="fodToJiraUpdateBugTrackerState" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Update JIRA issue state based on FoD vulnerability state"/>
		<property name="processor" ref="fodToJiraProcessorUpdateBugTrackerState"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetriever"/>
			<entry key="JiraConnectionRetriever" value-ref="jiraConnectionRetriever"/>
		</map></property>
	</bean>
	
	
	
	<!--==================================================================================-->
	<!-- ARCHER CONNECTION AND PROCESSOR CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines a proxy configuration used to access Archer. By default
	     no proxy is used. If necessary, proxy settings can either be entered here,
	     or using -ArcherProxyUrl, -ArcherProxyUserName and -ArcherProxyPassword command line
	     options. If a proxy user name is specified without a password, the user
	     will be prompted to enter the proxy password. -->
	<bean id="archerProxy" class="com.fortify.processrunner.util.rest.ContextAwareProxyConfiguration">
		<property name="name" value="Archer"/>
		<!-- <property name="uri" value="http://proxy:port/"/> -->
		<!-- <property name="userName" value="proxy user (optional)"/> -->
		<!-- <property name="password" value="proxy password (optional)"/> -->
	</bean>
	
	<!-- Define Archer connection information like base URL, instance name, user name,
	     user domain and password. 
	     
	     These properties can either be configured here, or provided via the 
	     -ArcherBaseUrl, -AcherInstanceName, -ArcherUserName, -ArcherUserDomain and 
	     -ArcherPassword command line options. Alternatively, if these properties have 
	     not been provided either here or via command line options, the user will be 
	     prompted to enter the corresponding value.
	-->
	<bean id="archerConnectionRetriever" class="com.fortify.processrunner.archer.connection.ContextAwareArcherConnectionRetriever">
		<property name="proxy" ref="archerProxy"/>
		<!-- <property name="baseUrl" value="http://192.168.99.100:32768/"/> -->
		<!-- <property name="instanceName" value="instancename"/> -->
		<!-- <property name="userName" value="username"/> -->
		<!-- <property name="userDomain" value="userdomain"/> -->
		<!-- <property name="password" value="password"/> -->
	</bean>
	
	<!-- This bean defines the processor configuration for submitting FoD vulnerabilities 
	     to Archer. If necessary, you can change the properties in this bean, for example 
	     to change the fields and field data submitted to Archer. 
	-->
	<bean id="fodToArcherIssueSubmitterNonGrouped" class="com.fortify.processrunner.archer.processor.ProcessorArcherSubmitIssueForVulnerabilities">
		<property name="fields"><map>
			<!-- TODO Add examples for recommendations etcetera -->
			<entry key="summary" value="FoD Detected ${category} at ${primaryLocationFull}"/>
			<entry key="description" value="Category: ${category} at ${primaryLocationFull}"/>
			<entry key="priority.name" value="${{'Critical':'Highest','High':'High','Medium':'Medium','Low':'Low'}.get(severityString)}"/>
			<entry key="labels" value="${{'FoD'}}"/>
		</map></property>

		<!-- Define extra data to be appended to one or more of the fields defined
		     by issue.fields above. For non-grouped vulnerabilities, we could just 
		     as well have appended these expressions to the corresponding
		     issue.fields entry above. However, using issue.appendedFields allows 
		     us to re-use the same issue field configuration for grouped issues.
		-->
		<property name="appendedFields"><map>
			<entry key="description" value="\n\nId: ${id}\nState: ${vulnState}\nLine: ${lineNumber?:'Unknown'}\nLink: ${deepLink}"/>
		</map></property>
	</bean>
	
	<!-- This bean defines the processor configuration for submitting grouped FoD 
	     vulnerabilities to Archer. Configuration is inherited from the non-grouped
	     variant; here we only add the grouping criteria. 
	-->
	<bean id="fodToArcherIssueSubmitterGrouped" parent="fodToArcherIssueSubmitterNonGrouped">
		<property name="groupTemplateExpression" value="${category}+${primaryLocationFull}"/>
	</bean>
	
	<!-- This bean combines fodSubmitVulnerabilitiesToBugTracker with the non-grouped 
	     Archer issue submitter. 
	-->
	<bean id="fodToArcherProcessorNonGrouped" parent="fodSubmitVulnerabilitiesToBugTracker">
		<property name="useFoDCommentForSubmittedBugs" value="false"/>
		<property name="submitIssueProcessor" ref="fodToArcherIssueSubmitterNonGrouped"/>
	</bean>
	
	<!-- This bean combines fodSubmitVulnerabilitiesToBugTracker with the grouped 
	     Archer issue submitter. 
	-->
	<bean id="fodToArcherProcessorGrouped" parent="fodSubmitVulnerabilitiesToBugTracker">
		<property name="useFoDCommentForSubmittedBugs" value="false"/>
		<property name="submitIssueProcessor" ref="fodToArcherIssueSubmitterGrouped"/>
	</bean>
	
	<!--==================================================================================-->
	<!-- ARCHER PROCESS RUNNER CONFIGURATIONS -->
	<!--==================================================================================-->
	
	<!-- This process runner submits grouped vulnerabilities to Archer -->
	<bean id="fodToArcherGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit grouped vulnerabilities from FoD to Archer"/>
		<property name="processor" ref="fodToArcherProcessorGrouped"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetriever"/>
			<entry key="ArcherConnectionRetriever" value-ref="archerConnectionRetriever"/>
		</map></property>
	</bean>
	
	<!-- This process runner submits non-grouped vulnerabilities to Archer -->
	<bean id="fodToArcherNonGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit non-grouped vulnerabilities from FoD to Archer"/>
		<property name="processor" ref="fodToArcherProcessorNonGrouped"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetriever"/>
			<entry key="ArcherConnectionRetriever" value-ref="archerConnectionRetriever"/>
		</map></property>
	</bean>
	
	
	<!--==================================================================================-->
	<!-- EXPORT VULNERABILITIES TO FILE PROCESSOR CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the processor configuration for writing FoD vulnerability
	     data to a file. If necessary, you can change the properties in this bean, for 
	     example to change the fields and field data submitted to the file.
	-->
	<bean id="fodToFileIssueSubmitterNonGrouped" class="com.fortify.processrunner.file.ProcessorFileSubmitIssueForVulnerabilities">
		<property name="fields"><map>
			<entry key="id" value="${id}"/>
			<entry key="vulnId" value="${vulnId}"/>
			<entry key="category" value="${category}"/>
			<entry key="primaryLocationFull" value="${primaryLocationFull}"/>
			<entry key="severity" value="${severityString}"/>
			<entry key="deepLink" value="${deepLink}"/>
		</map></property>
	</bean>
	
	<!-- This bean combines fodSubmitVulnerabilitiesToBugTracker with the non-grouped 
	     File issue submitter. 
	-->
	<bean id="fodToFileProcessorNonGrouped" parent="fodSubmitVulnerabilitiesToBugTracker">
		<property name="useFoDCommentForSubmittedBugs" value="true"/>
		<property name="submitIssueProcessor" ref="fodToFileIssueSubmitterNonGrouped"/>
	</bean>
	
	<!--==================================================================================-->
	<!-- EXPORT VULNERABILITIES TO FILE PROCESS RUNNER CONFIGURATIONS -->
	<!--==================================================================================-->
	
	<!-- This process runner submits non-grouped vulnerabilities to a file -->
	<bean id="fodToFileNonGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit non-grouped vulnerabilities from FoD to a file"/>
		<property name="processor" ref="fodToFileProcessorNonGrouped"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetriever"/>
		</map></property>
	</bean>
	
</beans>
