<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!--==================================================================================-->
	<!-- FoD CONNECTION CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines a proxy configuration used to access FoD. By default
	     no proxy is used. If necessary, proxy settings can either be entered here,
	     or using -FoDProxyUrl, -FoDProxyUserName and -FoDProxyPassword command line
	     options. If a proxy user name is specified without a password, the user
	     will be prompted to enter the proxy password. -->
	<bean id="fodProxy" class="com.fortify.processrunner.util.rest.ContextAwareProxyConfiguration">
		<property name="name" value="FoD"/>
		<!-- <property name="uri" value="http://proxy:port/"/> -->
		<!-- <property name="userName" value="proxy user (optional)"/> -->
		<!-- <property name="password" value="proxy password (optional)"/> -->
	</bean>
	
	<!-- Define FoD connection information like base URL, client credentials, 
	     and optional proxy. Please see fodConnectionRetrieverUserCredentials 
	     below for connecting to FoD using user credentials.
	     
	     If you require a different FoD instance, you can either change the
	     base URL here, or provide the correct FoD base URL via the
	     -FoDBaseUrl command line option (which will override the base URL 
	     configured here).
	     
	     Client ID and Secret can either be configured here, or provided via 
	     the command line options -FoDClientId and -FoDClientSecret. If not 
	     provided via either configuration or command line option, the user 
	     will be prompted for the client ID and/or client secret to use. 
	-->
	<bean id="fodConnectionRetrieverClientCredentials" class="com.fortify.processrunner.fod.connection.ContextAwareFoDConnectionRetrieverClientCredentials">
		<property name="baseUrl" value="https://emea.hpfod.com/"/>
		<property name="proxy" ref="fodProxy"/>
		<!-- <property name="clientId" value="API key"/> -->
		<!-- <property name="clientSecret" value="client secret"/> -->
	</bean>
	
	<!-- Define FoD connection information like base URL, user credentials, 
	     and optional proxy. Please see fodConnectionRetrieverClientCredentials 
	     above for connecting to FoD using client credentials,
	     
	     If you require a different FoD instance, you can either change the
	     base URL here, or provide the correct FoD base URL via the
	     -FoDBaseUrl command line option (which will override the base URL 
	     configured here).
	     
	     Tenant, user name and password can either be configured here, or 
	     provided via the command line options -FoDTentant, -FoDUserName and
	     -FoDPassword respectively. Alternatively, if tenant, user name and/or 
	     password have not been provided either here or via command line options, 
	     the user will be prompted to enter the corresponding value.    
    -->
	<bean id="fodConnectionRetrieverUserCredentials" class="com.fortify.processrunner.fod.connection.ContextAwareFoDConnectionRetrieverUserCredentials">
		<property name="baseUrl" value="https://hpfod.com/"/>
		<property name="proxy" ref="fodProxy"/>
		<!-- <property name="tenant" value="tenant" /> -->
		<!-- <property name="userName" value="username"/> -->
		<!-- <property name="password" value="password"/> -->
	</bean>
	
	
	<!--==================================================================================-->
	<!-- FoD VULNERABILITY RETRIEVAL CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This abstract bean defines common configuration options for retrieving
	     vulnerabilities from FoD, like vulnerability filter options, and extra
	     data to be retrieved. 
	     
	     Each of these properties can either be changed here (if all processor
	     configurations that you use require the same settings), or overridden 
	     in the concrete processor configurations below (if you use multiple
	     processor configurations that require different settings). 
	-->
	<bean id="fodVulnerabilityRetrieverDefaultConfiguration" abstract="true">
		<!-- Define any extra data that must be loaded from FoD for filtering 
		     and/or building the issue contents. Note that summary data will
		     always be loaded and thus does not need to be added here.  -->
		<property name="fod.extraFields"><list>
			<!-- <value>details</value> -->
			<!-- <value>recommendations</value> -->
			<!-- <value>screenshots</value> -->
			<!-- <value>history</value> -->
			<!-- <value>requestResponse</value> -->
			<!-- <value>headers</value> -->
			<!-- <value>parameters</value> -->
			<!-- <value>traces</value> -->
		</list></property>
		
		<!-- Define the filters that determine which FoD vulnerabilities will
		     be submitted to the bug tracker or file.
		     
		     fod.topLevelFieldFilters allows equality-based filtering on any 
		     vulnerability attribute returned by /api/v3/Releases/${FoDReleaseId}/vulnerabilities
		     Where possible, these filters are processed by FoD, reducing the
		     number of vulnerabilities returned by FoD. As such, these filters 
		     provide best performance.
		     
		     fod.topLevelFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by /api/v3/Releases/${FoDReleaseId}/vulnerabilities
		     These filters are used before loading any extra fields from FoD
		     (see fod.extraFields above) and thus provide medium performance.
		     
		     fod.allFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by either 
		     /api/v3/Releases/${FoDReleaseId}/vulnerabilities or the
		     extra fields as specified via fod.extraFields above. Since these
		     filters are only applied after loading all extra data from FoD,
		     these filters provide worst performance. 
		-->
		<property name="fod.topLevelFieldSimpleFilters"><map>
			<!-- <entry key="severityString" value="Critical"/> -->
			<!-- <entry key="hasComments" value="false"/> -->
			<!-- <entry key="assignedUser" value="Senden, Ruud"/> -->
			<!-- TODO: Add all interesting filter fields in comments -->
			<entry key="isSuppressed" value="false"/>
			<!-- <entry key="developerStatus" value="In Remediation"/> -->
			<!-- <entry key="severity" value="4"/> -->
		</map></property>
		<property name="fod.topLevelFieldRegExFilters"><map>
			<entry key="severityString" value="Critical|High"/>
		</map></property>
		<property name="fod.allFieldRegExFilters"><map>
		</map></property>
	</bean>
	
	
	<!--==================================================================================-->
	<!-- JIRA CONNECTION AND PROCESSOR CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines a proxy configuration used to access JIRA. By default
	     no proxy is used. If necessary, proxy settings can either be entered here,
	     or using -JiraProxyUrl, -JiraProxyUserName and -JiraProxyPassword command line
	     options. If a proxy user name is specified without a password, the user
	     will be prompted to enter the proxy password. -->
	<bean id="jiraProxy" class="com.fortify.processrunner.util.rest.ContextAwareProxyConfiguration">
		<property name="name" value="Jira"/>
		<!-- <property name="uri" value="http://proxy:port/"/> -->
		<!-- <property name="userName" value="proxy user (optional)"/> -->
		<!-- <property name="password" value="proxy password (optional)"/> -->
	</bean>
	
	<!-- Define JIRA connection information like base URL, user name and password. 
	     
	     Base URL, user name and password can either be configured here, or
	     provided via the -JiraBaseUrl, -JiraUserName and -JiraPassword command
	     line options. Alternatively, if user name and/or password have not been 
	     provided either here or via command line options, the user will be 
	     prompted to enter the corresponding value.
	-->
	<bean id="jiraConnectionRetriever" class="com.fortify.processrunner.jira.connection.ContextAwareJiraConnectionRetriever">
		<property name="proxy" ref="jiraProxy"/>
		<!-- <property name="baseUrl" value="http://192.168.99.100:32768/"/> -->
		<!-- <property name="userName" value="rsenden"/> -->
		<!-- <property name="password" value="password"/> -->
	</bean>
	
	<!-- This bean defines the processor configuration for submitting FoD vulnerabilities 
	     to JIRA. Common FoD vulnerability retrieval options are inherited from 
	     fodVulnerabilityRetrieverDefaultConfiguration above.
	     
	     This processor supports issue grouping (i.e. submitting multiple FoD vulnerabilities
	     to a single JIRA issue based on a grouping expression). In order to enable grouping,
	     the grouping expression can be set via the GroupTemplateExpression context property.
	     
	     If necessary, you can change the properties in this bean, for example to to change 
	     the fields and field data submitted to JIRA. 
	-->
	<bean id="fodToJiraProcessor" parent="fodVulnerabilityRetrieverDefaultConfiguration" class="com.fortify.processrunner.fod.jira.FoDProcessorSubmitVulnerabilitiesToJira">
		<!-- Define the fields that will be submitted to JIRA. You can add any supported 
	         JIRA field here, but you must adhere to the field format described at 
	         https://docs.atlassian.com/jira/REST/latest/#api/2/issue-createIssue
	         For example, some fields require a nested object (see 'priority.name'
	         field), or require the value to be an array (see 'labels' field). 
		-->
		<property name="fields"><map>
			<!-- TODO Add examples for recommendations etcetera -->
			<entry key="summary" value="FoD Detected ${category} at ${primaryLocationFull}"/>
			<entry key="description" value="Category: ${category} at ${primaryLocationFull}"/>
			<entry key="priority.name" value="${{'Critical':'Highest','High':'High','Medium':'Medium','Low':'Low'}.get(severityString)}"/>
			<entry key="labels" value="${{'FoD'}}"/>
		</map></property>
		
		<!-- Define extra data to be appended to one or more of the fields defined
		     by issue.fields above. For non-grouped vulnerabilities, we could just 
		     as well have appended these expressions to the corresponding
		     issue.fields entry above. However, using issue.appendedFields allows 
		     us to re-use the same issue field configuration for grouped issues.
		     
		     Note that any field defined in issue.appendedFields, and the corresponding 
		     fields in issue.fields, must be simple string values, not an array or other 
		     complex type. -->
		<property name="appendedFields"><map>
			<entry key="description" value="\n\nId: ${id}\nLine: ${lineNumber?:'Unknown'}\nLink: ${deepLink}"/>
		</map></property>
	</bean>
	
	<!--==================================================================================-->
	<!-- JIRA PROCESS RUNNER CONFIGURATIONS -->
	<!--==================================================================================-->
	
	<!-- This process runner submits grouped vulnerabilities to JIRA, using FoD user credentials -->
	<bean id="fodUserCredentialsToJiraGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit grouped vulnerabilities to JIRA, using FoD user credentials"/>
		<property name="processor" ref="fodToJiraProcessor"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetrieverUserCredentials"/>
			<entry key="JiraConnectionRetriever" value-ref="jiraConnectionRetriever"/>
			<entry key="GroupTemplateExpression" value="${category}+${primaryLocationFull}"/>
		</map></property>
	</bean>
	
	<!-- This process runner submits non-grouped vulnerabilities to JIRA, using FoD user credentials -->
	<bean id="fodUserCredentialsToJiraNonGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit non-grouped vulnerabilities to JIRA, using FoD user credentials"/>
		<property name="processor" ref="fodToJiraProcessor"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetrieverUserCredentials"/>
			<entry key="JiraConnectionRetriever" value-ref="jiraConnectionRetriever"/>
		</map></property>
	</bean>
		
	<!-- This process runner submits grouped vulnerabilities to JIRA, using FoD client credentials -->
	<bean id="fodClientCredentialsToJiraGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit grouped vulnerabilities to JIRA, using FoD client credentials"/>
		<property name="processor" ref="fodToJiraProcessor"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetrieverClientCredentials"/>
			<entry key="JiraConnectionRetriever" value-ref="jiraConnectionRetriever"/>
			<entry key="GroupTemplateExpression" value="${category}+${primaryLocationFull}"/>
		</map></property>
	</bean>
	
	<!-- This process runner submits non-grouped vulnerabilities to JIRA, using FoD client credentials -->
	<bean id="fodClientCredentialsToJiraNonGrouped" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Submit non-grouped vulnerabilities to JIRA, using FoD client credentials"/>
		<property name="processor" ref="fodToJiraProcessor"/>	
		<property name="context"><map>
			<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetrieverClientCredentials"/>
			<entry key="JiraConnectionRetriever" value-ref="jiraConnectionRetriever"/>
		</map></property>
	</bean>
	
	<!--==================================================================================-->
	<!-- EXPORT VULNERABILITIES TO FILE PROCESSOR CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the processor configuration for writing FoD vulnerability
	     data to a file.
	     
	     If necessary, you can change the properties in this bean, for example to use
	     different file headers and vulnerability contents.
	-->
	<bean id="fodToFileProcessor" parent="fodVulnerabilityRetrieverDefaultConfiguration" class="com.fortify.processrunner.fod.file.FoDProcessorSubmitVulnerabilitiesToFile">
		<property name="file.fieldHeaders" value="id,vulnId,category,primaryLocationFull,severity,deepLink"/>
		<property name="file.fieldTemplateExpressions" value="${id},${vulnId},${category},${primaryLocationFull},${severityString},${deepLink}"/>
	</bean>
	
	<!--==================================================================================-->
	<!-- EXPORT VULNERABILITIES TO FILE PROCESS RUNNER CONFIGURATIONS -->
	<!--==================================================================================-->
	
	<!-- Define the FoD to file context using FoD user credentials -->
	<util:map id="fodUserCredentialsToFileContext" map-class="com.fortify.processrunner.context.Context">
		<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetrieverUserCredentials"/>
	</util:map>
	
	<!-- Define the FoD to file context using FoD client credentials -->
	<util:map id="fodClientCredentialsToFileContext" map-class="com.fortify.processrunner.context.Context">
		<entry key="FoDConnectionRetriever" value-ref="fodConnectionRetrieverClientCredentials"/>
	</util:map>
	
	<!-- This process runner submits vulnerabilities to file, using FoD user credentials -->
	<bean id="fodUserCredentialsToFile" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Write vulnerability data to file, using FoD user credentials"/>
		<property name="processor" ref="fodToFileProcessor"/>	
		<property name="context" ref="fodUserCredentialsToFileContext"/>	
	</bean>
		
	<!-- This process runner submits vulnerabilities to file, using FoD client credentials -->
	<bean id="fodClientCredentialsToFile" class="com.fortify.processrunner.ProcessRunner">
		<property name="description" value="Write vulnerability data to file, using FoD client credentials"/>
		<property name="processor" ref="fodToFileProcessor"/>	
		<property name="context" ref="fodClientCredentialsToFileContext"/>	
	</bean>
	
</beans>
