<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<import resource="components/input/SSCInputConfig.xml"/>
	
	<!--==================================================================================-->
	<!-- SSC TO ALM OCTANE CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- This bean defines the context for the SSC to ALM Octane processing. All of these
	     properties can also be specified on the command line. -->
	<util:map id="contextProperties">
		<!-- TODO Add all possible properties -->
		<entry key="" value=""/>
	</util:map>
	
	<!-- This bean defines the processor configuration for submitting SSC vulnerabilities 
	     to Octane. If necessary, you can change the properties in this bean, for example 
	     to change the fields and field data submitted to Octane. 
	-->
	<bean id="sscToOctaneIssueSubmitter" class="com.fortify.processrunner.octane.processor.ProcessorOctaneSubmitIssueForVulnerabilities">
		<!-- Expression for grouping vulnerabilities into a single JIRA issue. Note that
		     grouping must be explicitly enabled using the EnableGrouping context property -->
		<property name="groupTemplateExpression" value="${category}+${primaryLocationFull}"/>
	
		<property name="fields"><map>
			<!-- TODO Add additional Octane fields -->
			<!--
				{
				  "data": [
				    {
				      "parent": {
				        "type": "work_item",
				        "id": "1001"
				      },
				      "author": {
				        "type": "workspace_user",
				        "id": "1001"
				      },
				      "product_areas": {
				        "data": [
				          
				        ]
				      },
				      "subtype": "defect",
				      "phase": {
				        "type": "phase",
				        "id": "1001"
				      },
				      "detected_by": {
				        "type": "workspace_user",
				        "id": "1001"
				      },
				      "description": "<html><body><p>tst<\/p>\n<\/body><\/html>",
				      "name": "test"
				    }
				  ]
				} 
			 -->
			<entry key="name" value="SSC Detected ${issueName} at ${fullFileName}"/>
			<entry key="description"><value><![CDATA[
				<b>--- Changes to the description will be overwritten when FoDBugTrackerUtility updates issues states ---</b><br/>
				<table>
					<tr><td>Category:</td><td>${issueName}</td></tr>
					<tr><td>File Name:</td><td>${fullFileName}</td></tr>
				</table><br/>
			]]></value></entry> 
			<entry key="phase.type" value="phase"/>
			<entry key="phase.id" value="1002"/>
			<entry key="parent.type" value="feature"/>
			<entry key="parent.id" value="3012"/>
		</map></property>
		<!-- Define extra data to be appended to one or more of the fields defined
		     by issue.fields above. For non-grouped vulnerabilities, we could just 
		     as well have appended these expressions to the corresponding
		     issue.fields entry above. However, using issue.appendedFields allows 
		     us to re-use the same issue field configuration for grouped issues.
		-->
		<property name="appendedFields"><map>
			<entry key="description"><value><![CDATA[
				<table>
					<tr><td>Id:</td><td>${id}</td></tr>
					<tr><td>State:</td><td>${vulnState}</td></tr>
					<tr><td>Line:</td><td>${lineNumber?:'Unknown'}</td></tr>
					<tr><td>Link:</td><td><a href="${deepLink}">${deepLink}</a></td></tr>
				</table><br/>
			]]></value></entry> 
		</map></property>
	</bean>
	
</beans>
