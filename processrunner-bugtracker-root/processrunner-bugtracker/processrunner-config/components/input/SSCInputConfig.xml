<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!--==================================================================================-->
	<!-- SSC CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- Auto-configure various components -->
	<context:component-scan base-package="com.fortify.processrunner.ssc"/>
	
	<!-- SSC configuration properties -->
	<bean id="sscConfiguration" class="com.fortify.processrunner.ssc.processor.composite.SSCBugTrackerProcessorConfiguration">
		<!-- Define the filters that determine which SSC vulnerabilities will
		     be submitted to the external system.
		     
		     topLevelFieldFilters allows filtering on fields similar to the SSC/AWB
		     search box; please see AWB or the SSC search syntax guide for information
		     on what fields can be filtered upon.
		     
		     topLevelFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by /api/v1/projectVersions/${SSCApplicationVersionId}/issues
		     These filters are used before loading any extra issue details from SSC
		     (see includeIssueDetails setting) and thus provide medium performance.
		     
		     allFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by either 
		     /api/v1/projectVersions/${SSCApplicationVersionId}/issues or
		     /api/v1/issueDetails. Since these filters are only applied 
		     after loading all issue details from SSC, these filters provide 
		     worst performance. 
		-->
		<property name="topLevelFieldSimpleFilters"><map>
			<entry key="analysis" value="Exploitable"/>
			<!-- TODO: Add additional interesting filter fields in comments -->
		</map></property>
		<property name="topLevelFieldRegExFilters"><map>
			<!-- TODO: Add additional interesting filter fields in comments -->
		</map></property>
		<property name="allFieldRegExFilters"><map>
		</map></property>
		
		<!-- Indicate whether additional issue details should be loaded from SSC. 
		     Is set to false, only data returned by 
		     /api/v1/projectVersions/${SSCApplicationVersionId}/issues
		     will be available. If set to true, data returned by
		     /api/v1/issueDetails will also be available. -->
		<property name="includeIssueDetails" value="true"/>
		
		<!-- Define the SSC custom tag name used to store the bug link. Note that
		     this custom field must be assigned to the application version for
		     which you are submitting issues to the bug tracker. If not defined,
		     you must either submit the bugs through the native SSC bug tracker
		     integrations (see SSCToSSCBugTrackers.xml), or install and configure
		     the SSC AddExistingBugLinkBugTracker for your application versions
		     (this feature is not yet implemented). -->
		<!-- <property name="customTagName" value="bugLink"/> -->
		
		<!-- This property defines the expression for evaluating whether an SSC 
		     vulnerability should be considered open or closed. This expression
		     can use any SSC vulnerability attribute. Commonly used attributes
		     for this expression include removed and suppressed. -->
		<property name="isVulnerabilityOpenExpression"><value><![CDATA[
			removed==false && suppressed==false
		]]></value></property>
	</bean>
</beans>
