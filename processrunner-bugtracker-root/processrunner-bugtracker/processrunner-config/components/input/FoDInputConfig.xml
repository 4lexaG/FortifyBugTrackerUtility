<?xml version="1.0" encoding="UTF-8"?>
<!--
  (c) Copyright 2017 Hewlett Packard Enterprise Development LP
  
  Permission is hereby granted, free of charge, to any person obtaining a
  copy of this software and associated documentation files (the Software"),
  to deal in the Software without restriction, including without limitation 
  the rights to use, copy, modify, merge, publish, distribute, sublicense, 
  and/or sell copies of the Software, and to permit persons to whom the 
  Software is furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included 
  in all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
  KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR 
  PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
  DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF 
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN 
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS 
  IN THE SOFTWARE.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">
	
	<!--==================================================================================-->
	<!-- FoD CONFIGURATION -->
	<!--==================================================================================-->
	
	<!-- Auto-configure various components -->
	<context:component-scan base-package="com.fortify.processrunner.fod"/>
	
	<!-- FoD configuration properties -->
	<bean id="fodConfiguration" class="com.fortify.processrunner.fod.processor.composite.FoDBugTrackerProcessorConfiguration">
		<!-- Define any extra data that must be loaded from FoD for filtering 
		     and/or building the issue contents. Note that previous versions
		     automatically loaded summary data, but this is no longer the case
		     if useFoDCommentForSubmittedBugs is set to false.
		     If your customized configuration depends on summary data, you 
		     will need to enable the summary field here. -->
		<property name="extraFields"><list>
<!-- 			<value>summary</value> -->
<!-- 			<value>details</value> -->
<!-- 			<value>recommendations</value> -->
<!-- 			<value>screenshots</value> -->
<!-- 			<value>history</value> -->
<!-- 			<value>request-response</value> -->
<!-- 			<value>headers</value> -->
<!-- 			<value>parameters</value> -->
<!-- 			<value>traces</value> -->
		</list></property>
		
		<!-- Define the filters that determine which FoD vulnerabilities will
		     be submitted to the bug tracker or file.
		     
		     fod.topLevelFieldFilters allows equality-based filtering on any 
		     vulnerability attribute returned by /api/v3/Releases/${FoDReleaseId}/vulnerabilities
		     Where possible, these filters are processed by FoD, reducing the
		     number of vulnerabilities returned by FoD. As such, these filters 
		     provide best performance. Values may contain the '|' operator to
		     match against multiple allowed values.
		     
		     fod.topLevelFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by /api/v3/Releases/${FoDReleaseId}/vulnerabilities
		     These filters are used before loading any extra fields from FoD
		     (see fod.extraFields above) and thus provide medium performance.
		     
		     fod.allFieldRegExFilters allows RegEx-based filtering on any
		     vulnerability attribute returned by either 
		     /api/v3/Releases/${FoDReleaseId}/vulnerabilities or the
		     extra fields as specified via fod.extraFields above. Since these
		     filters are only applied after loading all extra data from FoD,
		     these filters provide worst performance. 
		-->
		<property name="topLevelFieldSimpleFilters"><map>
			<entry key="isSuppressed" value="false"/>
			<entry key="severityString" value="Critical|High"/>
			<!-- <entry key="hasComments" value="false"/> -->
			<!-- <entry key="assignedUser" value="Senden, Ruud"/> -->
			<!-- <entry key="developerStatus" value="In Remediation"/> -->
			<!-- <entry key="severity" value="4"/> -->
			<!-- TODO: Add additional interesting filter fields in comments -->
		</map></property>
		<property name="topLevelFieldRegExFilters"><map>
		</map></property>
		<property name="allFieldRegExFilters"><map>
		</map></property>
		
		<!-- This flag can be set to true to add information about submitted bugs to 
		     FoD vulnerability comments. By default (false), the bug link will
		     be stored in the dedicated FoD bugLink field. -->
		<property name="useFoDCommentForSubmittedBugs" value="true"/>
		
		<!-- This property defines the expression for evaluating whether an FoD 
		     vulnerability should be considered open or closed. This expression
		     can use any FoD vulnerability attribute. Commonly used attributes
		     for this expression include closedStatus and isSuppressed. -->
		<property name="isVulnerabilityOpenExpression"><value><![CDATA[
			closedStatus==false && isSuppressed==false
		]]></value></property>
	</bean>
</beans>
